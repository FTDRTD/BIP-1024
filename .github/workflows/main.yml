name: Build Cross-Platform Releases

on:
  push:
    tags:
      - "v*" # 当推送 tag 时触发
  workflow_dispatch:

jobs:
  # ------------------- Windows 构建 -------------------
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pip\Cache
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt nuitka ttkbootstrap

      # 动态查找 Tcl/Tk 库的路径
      - name: Find Tcl/Tk paths
        id: tcl-paths
        shell: pwsh
        run: |
          $pythonPrefix = python -c "import sys; print(sys.prefix)"
          echo "TCL_PATH=$pythonPrefix\tcl\tcl8.6" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          echo "TK_PATH=$pythonPrefix\tcl\tk8.6" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Build with Nuitka
        shell: pwsh
        run: |
          nuitka --onefile --windows-console-mode=disable --enable-plugin=tk-inter `
            --include-package-data=ttkbootstrap `
            --include-data-dir="${{ steps.tcl-paths.outputs.TCL_PATH }}=tcl8.6" `
            --include-data-dir="${{ steps.tcl-paths.outputs.TK_PATH }}=tk8.6" `
            --include-data-file="english.txt=english.txt" `
            --output-filename=bip39_recovery.exe bip39_recovery.py

      - name: List files before upload
        run: dir

      - name: Upload Windows executable
        uses: actions/upload-artifact@v4
        with:
          name: bip39-recovery-windows
          path: bip39_recovery.exe

  # ------------------- Linux 构建 -------------------
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 确保你有一个 Dockerfile，例如:
      # FROM python:3.12-slim
      # WORKDIR /app
      # COPY requirements.txt .
      # RUN pip install -r requirements.txt nuitka ttkbootstrap
      # COPY . .
      - name: Build the Docker image
        run: docker build -t bip39-builder .

      - name: Run Nuitka inside Docker
        run: |
          docker run --rm -v ${{ github.workspace }}:/app bip39-builder /bin/bash -c '
            # 通过 Tcl 解释器可靠地找到 Tcl/Tk 库路径
            TCL_LIBRARY_PATH=$(python3 -c "from tkinter import Tcl; r=Tcl(); print(r.eval(\"info library\"))")
            TK_LIBRARY_PATH=$(python3 -c "from tkinter import Tcl; r=Tcl(); print(r.eval(\"set tk_library\"))")
            
            echo "Found Tcl library at: $TCL_LIBRARY_PATH"
            echo "Found Tk library at: $TK_LIBRARY_PATH"

            python3 -m nuitka \
              --onefile \
              --enable-plugin=tk-inter \
              --include-package-data=ttkbootstrap \
              --include-data-dir="$TCL_LIBRARY_PATH=tcl8.6" \
              --include-data-dir="$TK_LIBRARY_PATH=tk8.6" \
              --include-data-file="english.txt=english.txt" \
              --output-filename=bip39_recovery.bin \
              bip39_recovery.py
          '

      - name: List files before upload
        run: ls -lh

      - name: Upload Linux executable
        uses: actions/upload-artifact@v4
        with:
          name: bip39-recovery-linux
          path: bip39_recovery.bin

  # ------------------- macOS 构建 -------------------
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/Library/Caches/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt nuitka ttkbootstrap

      # 动态查找 Tcl/Tk 库的路径
      - name: Find Tcl/Tk paths
        id: tcl-paths
        run: |
          TCL_LIBRARY_PATH=$(python3 -c "from tkinter import Tcl; r=Tcl(); print(r.eval('info library'))")
          TK_LIBRARY_PATH=$(python3 -c "from tkinter import Tcl; r=Tcl(); print(r.eval('set tk_library'))")
          echo "TCL_PATH=$TCL_LIBRARY_PATH" >> $GITHUB_OUTPUT
          echo "TK_PATH=$TK_LIBRARY_PATH" >> $GITHUB_OUTPUT

      - name: Build with Nuitka
        run: |
          python -m nuitka --onefile \
            --enable-plugin=tk-inter \
            --include-package-data=ttkbootstrap \
            --include-data-dir="${{ steps.tcl-paths.outputs.TCL_PATH }}=tcl8.6" \
            --include-data-dir="${{ steps.tcl-paths.outputs.TK_PATH }}=tk8.6" \
            --include-data-file="english.txt=english.txt" \
            --output-filename=bip39_recovery \
            bip39_recovery.py

      - name: List files before upload
        run: ls -lh

      - name: Upload macOS executable
        uses: actions/upload-artifact@v4
        with:
          name: bip39-recovery-macos
          path: bip39_recovery

  # ------------------- 创建 Release -------------------
  create-release:
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    # 仅在推送 tag 时才运行此任务
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: List downloaded files
        run: ls -R artifacts

      - name: Rename files for release
        run: |
          mv artifacts/bip39-recovery-windows/bip39_recovery.exe ./bip39_recovery-windows.exe
          mv artifacts/bip39-recovery-linux/bip39_recovery.bin ./bip39_recovery-linux
          mv artifacts/bip39-recovery-macos/bip39_recovery ./bip39_recovery-macos
          chmod +x ./bip39_recovery-linux ./bip39_recovery-macos

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            bip39_recovery-windows.exe
            bip39_recovery-linux
            bip39_recovery-macos
