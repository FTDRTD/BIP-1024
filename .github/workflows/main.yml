name: Build Cross-Platform Releases

on:
  push:
    tags:
      - "v*" # 打 tag 时触发
  workflow_dispatch:

jobs:
  # ------------------- Windows 构建 -------------------
  build-windows:
    runs-on: windows-latest
    env:
      NUITKA_ALLOW_DEPENDS_DOWNLOAD: 1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt nuitka ttkbootstrap

      - name: Cache Dependency Walker
        uses: actions/cache@v4
        with:
          path: C:\Users\runneradmin\AppData\Local\Nuitka\Nuitka\Cache\downloads\depends\x86_64
          key: dependency-walker-${{ runner.os }}-v1

      - name: Install Dependency Walker
        run: |
          $dependsPath = "C:\Users\runneradmin\AppData\Local\Nuitka\Nuitka\Cache\downloads\depends\x86_64"
          if (-not (Test-Path "$dependsPath\depends.exe")) {
            New-Item -ItemType Directory -Path $dependsPath -Force
            Invoke-WebRequest -Uri "https://www.dependencywalker.com/depends22_x64.zip" -OutFile "$dependsPath\depends22_x64.zip"
            Expand-Archive -Path "$dependsPath\depends22_x64.zip" -DestinationPath $dependsPath -Force
          }
        shell: pwsh

      - name: Verify Dependency Walker
        run: |
          dir "C:\Users\runneradmin\AppData\Local\Nuitka\Nuitka\Cache\downloads\depends\x86_64"
        shell: pwsh

      - name: Build with Nuitka
        shell: pwsh
        run: |
          nuitka --onefile --windows-console-mode=disable --enable-plugin=tk-inter `
            --include-package-data=ttkbootstrap `
            --include-data-files=english.txt=./english.txt `
            --output-filename=bip39_recovery.exe bip39_recovery.py 2>&1 | Tee-Object -FilePath nuitka.log

      - name: List files before upload
        run: dir

      - name: Upload Nuitka log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: nuitka-log
          path: nuitka.log

      - name: Upload Windows executable
        uses: actions/upload-artifact@v4
        with:
          name: bip39-recovery-windows
          path: bip39_recovery.exe

  # ------------------- Linux 构建 -------------------
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build the Docker image
        run: docker build -t bip39-builder .

      - name: Run Nuitka inside Docker
        run: docker run --rm -v ${{ github.workspace }}:/app bip39-builder python3 -m nuitka --onefile --enable-plugin=tk-inter --include-package-data=ttkbootstrap --include-data-files=english.txt=./english.txt --output-filename=bip39_recovery.bin bip39_recovery.py

      - name: List files before upload
        run: ls -lh

      - name: Upload Linux executable
        uses: actions/upload-artifact@v4
        with:
          name: bip39-recovery-linux
          path: bip39_recovery.bin

  # ------------------- Release 创建 -------------------
  create-release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: bip39-recovery-windows
          path: ./windows

      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: bip39-recovery-linux
          path: ./linux

      - name: List downloaded files
        run: ls -lh ./windows ./linux

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            windows/bip39_recovery.exe
            linux/bip39_recovery.bin
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
